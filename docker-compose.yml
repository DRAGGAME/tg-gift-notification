version: "3.9"

services:
  db:
    image: postgres:18
    container_name: postgres_18
    hostname: postgres_18
    environment:
      POSTGRES_USER: ${USER_POSTGRES}
      POSTGRES_PASSWORD: ${PASSWORD_POSTGRES}
      POSTGRES_DB: ${DATABASE_POSTGRES}
      PGDATA: /var/lib/postgresql/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/pgdata
    command: >
      postgres
      -c max_connections=10000
      -c shared_buffers=256MB
      -c effective_cache_size=768MB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.7
      -c wal_buffers=16MB
      -c default_statistics_target=100

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER_POSTGRES} -d ${DATABASE_POSTGRES}"]
      interval: 30s
      timeout: 10s
      retries: 5

    restart: unless-stopped
    networks:
      - tg_gift_network

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bot
    environment:
      HOST_POSTGRES: postgres_18
      DATABASE_PORT: 5432
      USER_POSTGRES: ${USER_POSTGRES}
      PASSWORD_POSTGRES: ${PASSWORD_POSTGRES}
      DATABASE_POSTGRES: ${DATABASE_POSTGRES}
      TG_API: ${TG_API}

    volumes:
      - ./logs:/logs
    depends_on:
      - db
    networks:
      - tg_gift_network

volumes:

  pgdata:
    driver: local

  logs:
    driver: local


networks:
  tg_gift_network:
    driver: bridge
